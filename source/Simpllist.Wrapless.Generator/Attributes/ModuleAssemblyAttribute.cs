namespace Simpllist.Attributes;

internal static class ModuleAssemblyAttribute
{
    public const string FileName = @"Simpllist.Wrapless.ModuleAssemblyAttribute.g.cs";
    public const string TypeName = "ModuleAssembly";
    public const string TypeFullName = "Simpllist.Wrapless.ModuleAssemblyAttribute";
    public const string Value =
        @$"
// <auto-generated/>
#nullable enable
namespace Simpllist.Wrapless
{{

    /// <summary>
    /// Adds an input as the annototed method to you SIMPL module
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{Global.Namespace}"", ""{Global.Version}"")]
    [global::System.AttributeUsage(global::System.AttributeTargets.Assembly, AllowMultiple = false)]
    public sealed class ModuleAssemblyAttribute : global::System.Attribute
    {{
        /// <summary>
        /// SIMPL+ module name
        /// </summary>
        public string ModuleName {{ get; set; }}

        /// <summary>
        /// Dealer's name added to the modules information
        /// </summary>
        public string DealerName {{ get; set; }}

        /// <summary>
        /// System name added to the modules information
        /// </summary>
        public string SystemName {{ get; set; }}

        /// <summary>
        /// The programmer's name added to the modules information
        /// </summary>
        public string Programmer {{ get; set; }}

        /// <summary>
        /// The programmer's name added to the modules information
        /// </summary>
        public string? Comments {{ get; set; }}

        /// <summary>
        /// The programmer's name added to the modules information
        /// </summary>
        public string? PdfHelpFile {{ get; set; }}

        public ModuleAssemblyAttribute(string moduleName, string dealerName, string systemName, string programmer, string? comments = null, string? pdfHelpFile = null)
        {{
            ModuleName = moduleName;
            DealerName = dealerName;
            SystemName = systemName;
            Programmer = programmer;
            Comments = comments;
            PdfHelpFile = pdfHelpFile;
        }}
    }}
}}
";
}