namespace Simpllist.Extensions;

internal static class ConversionExtensions
{
    public const string FileName = @"Simpllist.Wrapless.ConversionExtensions.g.cs";
    public const string TypeName = "UshortConversionExtensions";
    public const string TypeFullName = "Simpllist.Wrapless.UshortConversionExtensions";
    public const string Value =
        @$"
// <auto-generated/>
#nullable enable
namespace Simpllist.Wrapless
{{
    /// <summary>
    /// Converts SIMPL+ values to and from native types.
    /// </summary>
    public static class UshortConversionExtensions
    {{
        /// <summary>
        /// Converts a valid SIMPL+ ushort to a native C# boolean.
        /// </summary>
        /// <param name=""join"">The ushort Join value from or to SIMPL+</param>
        /// <returns>True when the value is 1 and otherwise false</returns>
        public static bool ToBoolean(this ushort join) => join == 1;

        /// <summary>
        /// Converts a boolean value to a compatible SIMPL+ ushort Join value
        /// </summary>
        /// <param name=""value"">The boolean value true or false to convert</param>
        /// <returns>1 when the value is true and 0 when the value is false</returns>
        public static ushort ToUshort(this bool value) => (ushort)(value ? 1 : 0);
}}
}}

";
}